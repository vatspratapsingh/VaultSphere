{"ast":null,"code":"var _jsxFileName = \"/Users/Vatspratapsingh/Desktop/VaultSphere/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for stored user data and token on app load\n    const storedUser = localStorage.getItem('user');\n    const storedToken = localStorage.getItem('token');\n    if (storedUser && storedToken) {\n      const userData = JSON.parse(storedUser);\n      setUser(userData);\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password, role) => {\n    try {\n      // Call real backend API\n      const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Login failed');\n      }\n\n      // Store token and user data\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      console.log('Login successful, user data:', data.user);\n      console.log('Setting user in context:', data.user);\n      setUser(data.user);\n      setIsAuthenticated(true);\n\n      // Verify the user was set correctly\n      console.log('User set in context, isAuthenticated:', true);\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const signup = async (email, password, name, tenant_id) => {\n    try {\n      // Call real backend API\n      const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n      const response = await fetch(`${API_BASE_URL}/auth/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          name,\n          tenant_id\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Signup failed');\n      }\n\n      // For signup, we don't automatically log in the user\n      // They need to login separately\n      return {\n        success: true,\n        message: 'User created successfully. Please login.'\n      };\n    } catch (error) {\n      console.error('Signup error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    signup,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","storedUser","localStorage","getItem","storedToken","userData","JSON","parse","login","email","password","role","API_BASE_URL","process","env","REACT_APP_API_URL","response","fetch","method","headers","body","stringify","data","json","ok","error","setItem","token","console","log","success","message","signup","name","tenant_id","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Vatspratapsingh/Desktop/VaultSphere/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored user data and token on app load\n    const storedUser = localStorage.getItem('user');\n    const storedToken = localStorage.getItem('token');\n    \n    if (storedUser && storedToken) {\n      const userData = JSON.parse(storedUser);\n      setUser(userData);\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password, role) => {\n    try {\n      // Call real backend API\n      const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Login failed');\n      }\n\n      // Store token and user data\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n\n      console.log('Login successful, user data:', data.user);\n      console.log('Setting user in context:', data.user);\n      setUser(data.user);\n      setIsAuthenticated(true);\n      \n      // Verify the user was set correctly\n      console.log('User set in context, isAuthenticated:', true);\n      \n      return { success: true, user: data.user };\n    } catch (error) {\n      console.error('Login error:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const signup = async (email, password, name, tenant_id) => {\n    try {\n      // Call real backend API\n      const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n      const response = await fetch(`${API_BASE_URL}/auth/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password, name, tenant_id }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Signup failed');\n      }\n\n      // For signup, we don't automatically log in the user\n      // They need to login separately\n      return { success: true, message: 'User created successfully. Please login.' };\n    } catch (error) {\n      console.error('Signup error:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    signup,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}